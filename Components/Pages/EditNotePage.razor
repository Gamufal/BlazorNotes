@page "/note/{Id:int}"
@using BlazorNotes.DataModels
@using BlazorNotes.Services
@inject INoteService NoteService
@inject NavigationManager Nav

<h2>@note?.Title</h2>

@if (note != null)
{
    <div class="note-header-bar">
        <h2>@note.Title</h2>
        <button class="delete-button" @onclick="ConfirmDelete">-</button>
    </div>
    <div class="note-created">Utworzono: @note.CreationDate.ToString("g")</div>

    <textarea @bind="note.Content" class="note-editor"></textarea>
    <br />
    <button class="save-button" @onclick="SaveNote">Zapisz zmiany</button>
}
else
{
    <p>Ładowanie...</p>
}

@code {
    [Parameter] public int Id { get; set; }

    private Note? note;

    protected override async Task OnInitializedAsync()
    {
        note = await NoteService.GetByIdAsync(Id);
    }

    private async Task SaveNote()
    {
        if (note != null)
        {
            await NoteService.UpdateAsync(note);
            Nav.NavigateTo("/");
        }
    }

    private async Task ConfirmDelete()
    {
        var confirmed = await JS.InvokeAsync<bool>("confirm", "Czy na pewno chcesz usunąć tę notatkę?");
        if (confirmed && note != null)
        {
            await NoteService.DeleteAsync(note.Id);
            Nav.NavigateTo("/");
        }
    }

    [Inject] IJSRuntime JS { get; set; } = default!;
}