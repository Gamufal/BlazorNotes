@page "/note/{Id:int}"
@using BlazorNotes.DataModels
@using BlazorNotes.Services
@inject INoteService NoteService
@inject NavigationManager Nav
@inject IJSRuntime JS

<div class="main-container">
    @if (note != null)
    {
        <EditForm Model="@note" OnValidSubmit="SaveNote">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="note-header-bar">
                <h2>@note.Title</h2>
                <button class="delete-button" type="button" @onclick="ConfirmDelete">-</button>
            </div>

            <div class="note-created">Utworzono: @note.CreationDate.ToString("g")</div>

            <textarea class="note-editor" @bind="note.Content"></textarea>

            <br />
            <button class="save-button" type="submit">Zapisz zmiany</button>
        </EditForm>
    }
    else
    {
        <p>Ładowanie notatki...</p>
    }
</div>

<footer>
    <p>Website created by Kamil Kotorc</p>
</footer>

@code {
    [Parameter] public int Id { get; set; }

    private Note? note;

    protected override async Task OnInitializedAsync()
    {
        note = await NoteService.GetByIdAsync(Id);
    }

    private async Task SaveNote()
    {
        if (note != null)
        {
            await NoteService.UpdateAsync(note);
            Nav.NavigateTo("/");
        }
    }

    private async Task ConfirmDelete()
    {
        if (note == null) return;

        var confirmed = await JS.InvokeAsync<bool>("confirm", "Czy na pewno chcesz usunąć tę notatkę?");
        if (confirmed)
        {
            await NoteService.DeleteAsync(note.Id);
            Nav.NavigateTo("/");
        }
    }
}
