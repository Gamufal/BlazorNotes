@page "/"
@using BlazorNotes.Services
@using BlazorNotes.DataModels
@inject INoteService NoteService
@inject NavigationManager Nav

<PageTitle>BlazorNotes</PageTitle>

<div class="main-container">
    
    <div class="header" >
        <h1>BlazorNotes</h1>
        <button class="add-button" @onclick="() => ToggleAddNoteForm()">+</button>
    </div>

    @if (showAddForm)
    {
        <EditForm Model="@newNote" OnValidSubmit="CreateNote">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="note-card add-card">
                <InputText @bind-Value="newNote.Title" placeholder="Tytuł nowej notatki" class="input-title" />
                <div class="button-group">
                    <button class="create-button" type="submit">Utwórz</button>
                    <button class="cancel-button" type="button" @onclick="ToggleAddNoteForm">Anuluj</button>
                </div>
            </div>
        </EditForm>
    }

    <div class="notes-list">
        @if (notes == null)
        {
            <p>Ładowanie...</p>
        }
        else
        {
            @foreach (var note in notes)
            {
                var noteUrl = $"/note/{note.Id}";
                <div class="note-card clickable" @onclick="() => Nav.NavigateTo(noteUrl)">
                    <div class="note-header">
                        <span class="note-title">@note.Title</span>
                        <span class="note-date">@note.CreationDate.ToShortDateString()</span>
                    </div>
                    <div class="note-preview">@note.Content?.Split('\n').FirstOrDefault()</div>
                </div>
            }
        }
    </div>
</div>
<footer>
    <p>Website crated by Kamil Kotorc</p>
</footer>

@code {
    private List<Note>? notes;
    private bool showAddForm = false;
    private Note newNote = new();

    protected override async Task OnInitializedAsync()
    {
        notes = await NoteService.GetAllAsync();
    }

    private void ToggleAddNoteForm()
    {
        showAddForm = !showAddForm;
        newNote = new Note(); // reset formularza
    }

    private async Task CreateNote()
    {
        newNote.CreationDate = DateTime.Now;
        newNote.Content = newNote.Content ?? "";

        await NoteService.AddAsync(newNote);
        notes = await NoteService.GetAllAsync();
        showAddForm = false;

        Nav.NavigateTo($"/note/{newNote.Id}");
    }
}